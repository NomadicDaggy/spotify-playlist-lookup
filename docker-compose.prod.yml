version: '3.8'

services:
  web:
    build:
      context: ./services/web
      dockerfile: Dockerfile.prod
    command: gunicorn --bind 0.0.0.0:5000 manage:app
    volumes:
      - ./services/web/:/usr/src/app/
    expose:
      - 5000
    env_file:
      - ./.env.prod
      - ./.env.spotify
      - ./.env.prod.db
    depends_on:
      broker-rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
  client:
    build:
      context: ./services/client
      dockerfile: Dockerfile.prod
    image: vue-client
    stdin_open: true
    volumes:
      - ./services/client:/usr/src/app
      - /node_modules
    environment:
      - NODE_ENV=production
    ports:
      - 1337:80
  api-worker01:
    build: ./services/web
    command: watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A app.celery_app:app worker --loglevel=info --concurrency=2
    environment:
      - APP_ENV=Prod
    env_file:
      - ./.env.prod
      - ./.env.spotify
      - ./.env.prod.db
    depends_on:
      - broker-rabbitmq
      - db
    volumes:
      - ./services/web/:/usr/src/app/
  api-beat:
    build: ./services/web
    command: celery -A tasks.celery beat --loglevel=info
    environment:
      - APP_ENV=Prod
    env_file:
      - ./.env.prod
    depends_on:
      - broker-rabbitmq
      - db
  celery-flower:
    image: gregsi/latest-celery-flower-docker:latest
    env_file:
      - ./.env.flower.prod
    ports:
      - "5556:5555"
    depends_on:
      - broker-rabbitmq
  broker-rabbitmq:
    image: "rabbitmq:3.9.22-management"
    ports:
      - "15673:15672"
    env_file:
      - ./.env.prod
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 2s
      timeout: 30s
      retries: 10
  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
    ports:
      - 5445:5432
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
        ]
      interval: 1s
      timeout: 20s
      retries: 10
  nginx:
    build: ./services/nginx
    ports:
      - 1338:80
    depends_on:
      - web

volumes:
  postgres_data_prod:
